/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.visp.mvpshortcut.listeners;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author RBORJA
 */
public class JButtonListener {

    public static void addActionListener(JPanel view, Field field, final Method listener, final Object presenter) throws IllegalArgumentException, IllegalAccessException {
        JButton button = (JButton) field.get(view);
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    if (listener.getParameterTypes().length > 0) {
                        listener.invoke(presenter, e);
                    } else {
                        listener.invoke(presenter);
                    }
                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
                    Logger.getLogger(JButtonListener.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        button.addActionListener(null);
        field.set(view, button);
    }

    public static void addKeyListener(JPanel view, Field field, final Map<String, Method> listener, final Object presenter) throws IllegalArgumentException, IllegalAccessException {
        JButton button = (JButton) field.get(view);
        button.addKeyListener(new KeyListener() {

            @Override
            public void keyPressed(KeyEvent e) {
                invoke("keyPressed", e);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                invoke("keyReleased", e);
            }
            
            @Override
            public void keyTyped(KeyEvent e) {
                invoke("keyType", e);
            }

            public void invoke(String name, Object... args) {
                try {
                    Method method = listener.get(name);
                    if (method.getParameterTypes().length > 0) {
                        method.invoke(presenter, args);
                    } else {
                        method.invoke(presenter);
                    }

                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
                    Logger.getLogger(JButtonListener.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        field.set(view, button);
    }
}
